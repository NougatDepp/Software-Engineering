//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.7.0
//     from Assets/Input Settings/ControllerActionsAsset.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @ControllerActionsAsset: IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @ControllerActionsAsset()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""ControllerActionsAsset"",
    ""maps"": [
        {
            ""name"": ""Player"",
            ""id"": ""c360fa72-7cb2-406a-a72d-45aab9e5ae17"",
            ""actions"": [
                {
                    ""name"": ""Move"",
                    ""type"": ""Button"",
                    ""id"": ""914a8c48-5851-4548-90fc-4b8b378494a7"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Jump"",
                    ""type"": ""Button"",
                    ""id"": ""e0eee2cd-37f1-4185-aeb0-074059c23fae"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Hold A"",
                    ""type"": ""Button"",
                    ""id"": ""dd9fa307-83ef-4478-9eed-e94533bcf7dc"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Hold B"",
                    ""type"": ""Button"",
                    ""id"": ""de90d163-591c-40ba-b4ea-7920928247d2"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Join"",
                    ""type"": ""Button"",
                    ""id"": ""c5340a52-f650-40d5-acf9-91537feeb712"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Sprint"",
                    ""type"": ""Button"",
                    ""id"": ""28c4ece7-df55-4095-8ea6-c924148960ab"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": ""MultiTap,Hold"",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Side B"",
                    ""type"": ""Button"",
                    ""id"": ""85f88e70-2f8b-4902-9419-554a12bd21dc"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Side A"",
                    ""type"": ""Button"",
                    ""id"": ""728f5d35-e852-460e-85ee-0e2ad6489b18"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Up B"",
                    ""type"": ""Button"",
                    ""id"": ""07f37e35-8d26-44c2-85e0-87600c3c45ad"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Up A"",
                    ""type"": ""Button"",
                    ""id"": ""986c95ab-c6bc-4b22-9c5d-7b7146fd1ba3"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Down B"",
                    ""type"": ""Button"",
                    ""id"": ""b8309dbe-c403-431c-a7ed-81a122a2fabd"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Down A"",
                    ""type"": ""Button"",
                    ""id"": ""3a159c2b-2eda-4de1-a580-16bd1a0df294"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Block"",
                    ""type"": ""Button"",
                    ""id"": ""664bf77d-85b8-48b5-888c-05d5551a5338"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""ResetAnimator"",
                    ""type"": ""Button"",
                    ""id"": ""eb529e00-2e13-482f-a923-133b98ac580c"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""18f7329d-7f35-4731-9e5b-88d011df6f44"",
                    ""path"": ""<Gamepad>/leftStick"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""37808515-5c0f-4149-9194-439070c968f1"",
                    ""path"": ""<Gamepad>/buttonNorth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Jump"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""bb01e678-6411-411e-aed6-134312536b7b"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Jump"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""7de869d6-0e23-48b9-95d7-e108ccc8643e"",
                    ""path"": ""<Gamepad>/buttonSouth"",
                    ""interactions"": ""Hold(duration=1)"",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Hold A"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""e0243e4f-21e9-49d7-8ce9-9b8f58423ab7"",
                    ""path"": ""<Gamepad>/start"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Join"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""634a75e4-d659-49d9-90e3-9b7b47d35792"",
                    ""path"": ""<Keyboard>/anyKey"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Join"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""5f1f8208-952c-4c99-bcb4-218cb62978b8"",
                    ""path"": ""<Gamepad>/dpad"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Sprint"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""Side B"",
                    ""id"": ""70a9fd0d-c416-492a-8f55-4aefb99ed641"",
                    ""path"": ""OneModifier"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Side B"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""binding"",
                    ""id"": ""ed14d69d-acaf-4bfd-8338-b9646e62282d"",
                    ""path"": ""<Gamepad>/buttonEast"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Side B"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""modifier"",
                    ""id"": ""4d2e8e7f-7c1e-4bbf-8f40-9bf03804666a"",
                    ""path"": ""<Gamepad>/leftStick/left"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Side B"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""modifier"",
                    ""id"": ""a6bff189-1492-4b35-b539-753061014cc4"",
                    ""path"": ""<Gamepad>/leftStick/right"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Side B"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""Up B"",
                    ""id"": ""99573ccf-b20c-4799-817f-56707fbe856e"",
                    ""path"": ""OneModifier"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Up B"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""binding"",
                    ""id"": ""e6cf2620-5476-4869-a4f0-0ba60a8702e1"",
                    ""path"": ""<Gamepad>/buttonEast"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Up B"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""modifier"",
                    ""id"": ""6656233e-b02f-4827-a602-6e8e15a8d853"",
                    ""path"": ""<Gamepad>/leftStick/up"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Up B"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""Down B"",
                    ""id"": ""ec5bd91b-9352-41eb-99fe-343f57751a58"",
                    ""path"": ""OneModifier"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Down B"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""modifier"",
                    ""id"": ""b5eb6892-a5d2-445f-92ec-eb7055ccb761"",
                    ""path"": ""<Gamepad>/buttonEast"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Down B"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""binding"",
                    ""id"": ""1e7b6b71-3229-4d2f-8703-01e2a3074f6a"",
                    ""path"": ""<Gamepad>/leftStick/down"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Down B"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""2b82ae4d-6253-4e05-b8d0-fc29c0501ff9"",
                    ""path"": ""<Gamepad>/buttonEast"",
                    ""interactions"": ""Hold"",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Hold B"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""Side A"",
                    ""id"": ""7c4160ad-2071-46be-b37a-509c6e50227b"",
                    ""path"": ""OneModifier"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Side A"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""binding"",
                    ""id"": ""8215eb08-4897-499e-9d3d-2b2675d4a595"",
                    ""path"": ""<Gamepad>/buttonSouth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Side A"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""modifier"",
                    ""id"": ""6b05abf6-6f9a-41a2-889a-8460801a1a43"",
                    ""path"": ""<Gamepad>/leftStick/left"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Side A"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""modifier"",
                    ""id"": ""224737a7-66af-4c61-9a23-a0fbb385ff14"",
                    ""path"": ""<Gamepad>/leftStick/right"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Side A"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""Up A"",
                    ""id"": ""18f64500-d36f-42a4-acfa-5b8c0208e320"",
                    ""path"": ""OneModifier"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Up A"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""binding"",
                    ""id"": ""d13d1d15-bb55-4233-bea4-214574c35408"",
                    ""path"": ""<Gamepad>/buttonSouth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Up A"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""modifier"",
                    ""id"": ""dd3b020e-fc77-43e9-984b-c973cd1e69d2"",
                    ""path"": ""<Gamepad>/leftStick/up"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Up A"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""Down A"",
                    ""id"": ""a408c8cf-3084-418a-994d-c17a265bfecd"",
                    ""path"": ""OneModifier"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Down A"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""modifier"",
                    ""id"": ""6d0d036f-2ae4-4113-9aab-d27b96a81eb4"",
                    ""path"": ""<Gamepad>/buttonSouth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Down A"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""binding"",
                    ""id"": ""03057e5d-d990-48ef-8d2e-542529ea2de1"",
                    ""path"": ""<Gamepad>/leftStick/down"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Down A"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""68b516f0-1419-49cf-b0b4-7ed14b49b8c9"",
                    ""path"": ""<Gamepad>/buttonWest"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Block"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""9cf5c5c0-e360-4908-8955-5149bed41037"",
                    ""path"": ""<Gamepad>/leftTrigger"",
                    ""interactions"": ""Hold(duration=3)"",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ResetAnimator"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""Menu"",
            ""id"": ""57d25555-b61f-40de-904e-8dafbf0651f8"",
            ""actions"": [
                {
                    ""name"": ""Move"",
                    ""type"": ""Button"",
                    ""id"": ""f0a9a436-69d6-41b4-a63d-2a04bb643fe0"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Back"",
                    ""type"": ""Button"",
                    ""id"": ""86733339-7dbd-4cc2-bc13-7089efd5a3c6"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Choose"",
                    ""type"": ""Button"",
                    ""id"": ""887d9351-7e6f-4dae-8346-196875209d92"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Ready"",
                    ""type"": ""Button"",
                    ""id"": ""0ae5fd9c-d73e-4513-9e4d-cf14692b3416"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""4ddc9116-ce60-4939-819a-aeaf9ec5987b"",
                    ""path"": ""<Gamepad>/leftStick"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""5acb4a8d-ac00-4a9b-b0f6-7061af97ffd9"",
                    ""path"": ""<Gamepad>/buttonEast"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Back"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""609b69ae-a94e-4c25-8379-86975f616f5b"",
                    ""path"": ""<Gamepad>/buttonSouth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Choose"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""c632c168-b11c-4f60-8cdc-e29d93c45c33"",
                    ""path"": ""<Gamepad>/select"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Ready"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // Player
        m_Player = asset.FindActionMap("Player", throwIfNotFound: true);
        m_Player_Move = m_Player.FindAction("Move", throwIfNotFound: true);
        m_Player_Jump = m_Player.FindAction("Jump", throwIfNotFound: true);
        m_Player_HoldA = m_Player.FindAction("Hold A", throwIfNotFound: true);
        m_Player_HoldB = m_Player.FindAction("Hold B", throwIfNotFound: true);
        m_Player_Join = m_Player.FindAction("Join", throwIfNotFound: true);
        m_Player_Sprint = m_Player.FindAction("Sprint", throwIfNotFound: true);
        m_Player_SideB = m_Player.FindAction("Side B", throwIfNotFound: true);
        m_Player_SideA = m_Player.FindAction("Side A", throwIfNotFound: true);
        m_Player_UpB = m_Player.FindAction("Up B", throwIfNotFound: true);
        m_Player_UpA = m_Player.FindAction("Up A", throwIfNotFound: true);
        m_Player_DownB = m_Player.FindAction("Down B", throwIfNotFound: true);
        m_Player_DownA = m_Player.FindAction("Down A", throwIfNotFound: true);
        m_Player_Block = m_Player.FindAction("Block", throwIfNotFound: true);
        m_Player_ResetAnimator = m_Player.FindAction("ResetAnimator", throwIfNotFound: true);
        // Menu
        m_Menu = asset.FindActionMap("Menu", throwIfNotFound: true);
        m_Menu_Move = m_Menu.FindAction("Move", throwIfNotFound: true);
        m_Menu_Back = m_Menu.FindAction("Back", throwIfNotFound: true);
        m_Menu_Choose = m_Menu.FindAction("Choose", throwIfNotFound: true);
        m_Menu_Ready = m_Menu.FindAction("Ready", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }

    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }

    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // Player
    private readonly InputActionMap m_Player;
    private List<IPlayerActions> m_PlayerActionsCallbackInterfaces = new List<IPlayerActions>();
    private readonly InputAction m_Player_Move;
    private readonly InputAction m_Player_Jump;
    private readonly InputAction m_Player_HoldA;
    private readonly InputAction m_Player_HoldB;
    private readonly InputAction m_Player_Join;
    private readonly InputAction m_Player_Sprint;
    private readonly InputAction m_Player_SideB;
    private readonly InputAction m_Player_SideA;
    private readonly InputAction m_Player_UpB;
    private readonly InputAction m_Player_UpA;
    private readonly InputAction m_Player_DownB;
    private readonly InputAction m_Player_DownA;
    private readonly InputAction m_Player_Block;
    private readonly InputAction m_Player_ResetAnimator;
    public struct PlayerActions
    {
        private @ControllerActionsAsset m_Wrapper;
        public PlayerActions(@ControllerActionsAsset wrapper) { m_Wrapper = wrapper; }
        public InputAction @Move => m_Wrapper.m_Player_Move;
        public InputAction @Jump => m_Wrapper.m_Player_Jump;
        public InputAction @HoldA => m_Wrapper.m_Player_HoldA;
        public InputAction @HoldB => m_Wrapper.m_Player_HoldB;
        public InputAction @Join => m_Wrapper.m_Player_Join;
        public InputAction @Sprint => m_Wrapper.m_Player_Sprint;
        public InputAction @SideB => m_Wrapper.m_Player_SideB;
        public InputAction @SideA => m_Wrapper.m_Player_SideA;
        public InputAction @UpB => m_Wrapper.m_Player_UpB;
        public InputAction @UpA => m_Wrapper.m_Player_UpA;
        public InputAction @DownB => m_Wrapper.m_Player_DownB;
        public InputAction @DownA => m_Wrapper.m_Player_DownA;
        public InputAction @Block => m_Wrapper.m_Player_Block;
        public InputAction @ResetAnimator => m_Wrapper.m_Player_ResetAnimator;
        public InputActionMap Get() { return m_Wrapper.m_Player; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(PlayerActions set) { return set.Get(); }
        public void AddCallbacks(IPlayerActions instance)
        {
            if (instance == null || m_Wrapper.m_PlayerActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_PlayerActionsCallbackInterfaces.Add(instance);
            @Move.started += instance.OnMove;
            @Move.performed += instance.OnMove;
            @Move.canceled += instance.OnMove;
            @Jump.started += instance.OnJump;
            @Jump.performed += instance.OnJump;
            @Jump.canceled += instance.OnJump;
            @HoldA.started += instance.OnHoldA;
            @HoldA.performed += instance.OnHoldA;
            @HoldA.canceled += instance.OnHoldA;
            @HoldB.started += instance.OnHoldB;
            @HoldB.performed += instance.OnHoldB;
            @HoldB.canceled += instance.OnHoldB;
            @Join.started += instance.OnJoin;
            @Join.performed += instance.OnJoin;
            @Join.canceled += instance.OnJoin;
            @Sprint.started += instance.OnSprint;
            @Sprint.performed += instance.OnSprint;
            @Sprint.canceled += instance.OnSprint;
            @SideB.started += instance.OnSideB;
            @SideB.performed += instance.OnSideB;
            @SideB.canceled += instance.OnSideB;
            @SideA.started += instance.OnSideA;
            @SideA.performed += instance.OnSideA;
            @SideA.canceled += instance.OnSideA;
            @UpB.started += instance.OnUpB;
            @UpB.performed += instance.OnUpB;
            @UpB.canceled += instance.OnUpB;
            @UpA.started += instance.OnUpA;
            @UpA.performed += instance.OnUpA;
            @UpA.canceled += instance.OnUpA;
            @DownB.started += instance.OnDownB;
            @DownB.performed += instance.OnDownB;
            @DownB.canceled += instance.OnDownB;
            @DownA.started += instance.OnDownA;
            @DownA.performed += instance.OnDownA;
            @DownA.canceled += instance.OnDownA;
            @Block.started += instance.OnBlock;
            @Block.performed += instance.OnBlock;
            @Block.canceled += instance.OnBlock;
            @ResetAnimator.started += instance.OnResetAnimator;
            @ResetAnimator.performed += instance.OnResetAnimator;
            @ResetAnimator.canceled += instance.OnResetAnimator;
        }

        private void UnregisterCallbacks(IPlayerActions instance)
        {
            @Move.started -= instance.OnMove;
            @Move.performed -= instance.OnMove;
            @Move.canceled -= instance.OnMove;
            @Jump.started -= instance.OnJump;
            @Jump.performed -= instance.OnJump;
            @Jump.canceled -= instance.OnJump;
            @HoldA.started -= instance.OnHoldA;
            @HoldA.performed -= instance.OnHoldA;
            @HoldA.canceled -= instance.OnHoldA;
            @HoldB.started -= instance.OnHoldB;
            @HoldB.performed -= instance.OnHoldB;
            @HoldB.canceled -= instance.OnHoldB;
            @Join.started -= instance.OnJoin;
            @Join.performed -= instance.OnJoin;
            @Join.canceled -= instance.OnJoin;
            @Sprint.started -= instance.OnSprint;
            @Sprint.performed -= instance.OnSprint;
            @Sprint.canceled -= instance.OnSprint;
            @SideB.started -= instance.OnSideB;
            @SideB.performed -= instance.OnSideB;
            @SideB.canceled -= instance.OnSideB;
            @SideA.started -= instance.OnSideA;
            @SideA.performed -= instance.OnSideA;
            @SideA.canceled -= instance.OnSideA;
            @UpB.started -= instance.OnUpB;
            @UpB.performed -= instance.OnUpB;
            @UpB.canceled -= instance.OnUpB;
            @UpA.started -= instance.OnUpA;
            @UpA.performed -= instance.OnUpA;
            @UpA.canceled -= instance.OnUpA;
            @DownB.started -= instance.OnDownB;
            @DownB.performed -= instance.OnDownB;
            @DownB.canceled -= instance.OnDownB;
            @DownA.started -= instance.OnDownA;
            @DownA.performed -= instance.OnDownA;
            @DownA.canceled -= instance.OnDownA;
            @Block.started -= instance.OnBlock;
            @Block.performed -= instance.OnBlock;
            @Block.canceled -= instance.OnBlock;
            @ResetAnimator.started -= instance.OnResetAnimator;
            @ResetAnimator.performed -= instance.OnResetAnimator;
            @ResetAnimator.canceled -= instance.OnResetAnimator;
        }

        public void RemoveCallbacks(IPlayerActions instance)
        {
            if (m_Wrapper.m_PlayerActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IPlayerActions instance)
        {
            foreach (var item in m_Wrapper.m_PlayerActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_PlayerActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public PlayerActions @Player => new PlayerActions(this);

    // Menu
    private readonly InputActionMap m_Menu;
    private List<IMenuActions> m_MenuActionsCallbackInterfaces = new List<IMenuActions>();
    private readonly InputAction m_Menu_Move;
    private readonly InputAction m_Menu_Back;
    private readonly InputAction m_Menu_Choose;
    private readonly InputAction m_Menu_Ready;
    public struct MenuActions
    {
        private @ControllerActionsAsset m_Wrapper;
        public MenuActions(@ControllerActionsAsset wrapper) { m_Wrapper = wrapper; }
        public InputAction @Move => m_Wrapper.m_Menu_Move;
        public InputAction @Back => m_Wrapper.m_Menu_Back;
        public InputAction @Choose => m_Wrapper.m_Menu_Choose;
        public InputAction @Ready => m_Wrapper.m_Menu_Ready;
        public InputActionMap Get() { return m_Wrapper.m_Menu; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(MenuActions set) { return set.Get(); }
        public void AddCallbacks(IMenuActions instance)
        {
            if (instance == null || m_Wrapper.m_MenuActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_MenuActionsCallbackInterfaces.Add(instance);
            @Move.started += instance.OnMove;
            @Move.performed += instance.OnMove;
            @Move.canceled += instance.OnMove;
            @Back.started += instance.OnBack;
            @Back.performed += instance.OnBack;
            @Back.canceled += instance.OnBack;
            @Choose.started += instance.OnChoose;
            @Choose.performed += instance.OnChoose;
            @Choose.canceled += instance.OnChoose;
            @Ready.started += instance.OnReady;
            @Ready.performed += instance.OnReady;
            @Ready.canceled += instance.OnReady;
        }

        private void UnregisterCallbacks(IMenuActions instance)
        {
            @Move.started -= instance.OnMove;
            @Move.performed -= instance.OnMove;
            @Move.canceled -= instance.OnMove;
            @Back.started -= instance.OnBack;
            @Back.performed -= instance.OnBack;
            @Back.canceled -= instance.OnBack;
            @Choose.started -= instance.OnChoose;
            @Choose.performed -= instance.OnChoose;
            @Choose.canceled -= instance.OnChoose;
            @Ready.started -= instance.OnReady;
            @Ready.performed -= instance.OnReady;
            @Ready.canceled -= instance.OnReady;
        }

        public void RemoveCallbacks(IMenuActions instance)
        {
            if (m_Wrapper.m_MenuActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IMenuActions instance)
        {
            foreach (var item in m_Wrapper.m_MenuActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_MenuActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public MenuActions @Menu => new MenuActions(this);
    public interface IPlayerActions
    {
        void OnMove(InputAction.CallbackContext context);
        void OnJump(InputAction.CallbackContext context);
        void OnHoldA(InputAction.CallbackContext context);
        void OnHoldB(InputAction.CallbackContext context);
        void OnJoin(InputAction.CallbackContext context);
        void OnSprint(InputAction.CallbackContext context);
        void OnSideB(InputAction.CallbackContext context);
        void OnSideA(InputAction.CallbackContext context);
        void OnUpB(InputAction.CallbackContext context);
        void OnUpA(InputAction.CallbackContext context);
        void OnDownB(InputAction.CallbackContext context);
        void OnDownA(InputAction.CallbackContext context);
        void OnBlock(InputAction.CallbackContext context);
        void OnResetAnimator(InputAction.CallbackContext context);
    }
    public interface IMenuActions
    {
        void OnMove(InputAction.CallbackContext context);
        void OnBack(InputAction.CallbackContext context);
        void OnChoose(InputAction.CallbackContext context);
        void OnReady(InputAction.CallbackContext context);
    }
}
